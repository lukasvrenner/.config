
# Read `man 5 sway` for a complete reference.

### Variables
#
# Mod1 is Alt key. Use Mod4 for super
# keep in mind that alt and super are swapped
set $mod Mod4
# xwayland disable

# Home row direction keys, like vim
set $left h
set $down j
set $up k 
set $right l

set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu fuzzel 

# lockscreen
set $lock swaylock
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
exec swayidle -w \
    timeout 300 '$lock' \
    timeout 300 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep '$lock'

# disable xwayland
xwayland disable
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 100 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

# swaymsg -t get_inputs
# man 7 xkeyboard-config
# sets dvorak keyboard layout
input type:keyboard {
    xkb_layout dvorak,us
    repeat_rate 020
    repeat_delay 200
    # swap super and alt; use Ctrl+Space to toggle layout
    xkb_options grp:ctrl_space_toggle,altwin:swap_alt_win
    #xkb_options caps:swapescape
}
input 1452:594:Apple_Inc._Apple_Internal_Keyboard_/_Trackpad {
    # swap alt and win for mac keyboard
    xkb_options grp:ctrl_space_toggle
    #xkb_options caps:swapescape
}
input type:touchpad {
natural_scroll enabled
}
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.


# Hide mouse cursor after a period of inactivity.
seat seat0 hide_cursor when-typing enable

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Screen Lock
# enable or disable screen on lid-close/open
bindswitch --locked lid:on exec systemctl suspend


# Monitor positions
output LVDS-1 pos 0 0
output HDMI-A-1 pos -280 -1050


# Workspaces
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# switches to previously focused workspace on repeat of focus
workspace_auto_back_and_forth yes

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {

    # options
    position top
    # gaps 4
    separator_symbol " | "
    wrap_scroll yes
    status_edge_padding 13
    status_padding 0


    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
    status_command i3status

    colors {
        # class            border  backgr. text
        statusline                         #ebdbb2
        background                 #282828

        focused_workspace  #458588 #458588 #ebdbb2
        active_workspace   #458588 #282828 #ebdbb2
        inactive_workspace #282828 #282828 #ebdbb2

        binding_mode       #3c3836 #3c3836 #ebdbb2
        separator "#b16286"
    }


}

# Windows:
font source code pro 10
# gaps inner 4px

default_border pixel 1

# class                 border  backgr. text    indicator 
client.focused          #282828 #98971a #ebdbb2 #cc241d   
client.focused_inactive #282828 #3c3836 #ebdbb2 #3c3836
client.unfocused        #282828 #3c3836 #ebdbb2 #3c3836
client.urgent           #282828 #cc241d #ebdbb2 #3c3836

# swaymsg -t get_tree
for_window [app_id="blueman-manager"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
for_window [app_id="xdg-desktop-portal-gtk"] floating enable


# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+n exec $term -e $EDITOR


# Kill focused window
bindsym $mod+Shift+q kill

# Start launcher
bindsym $mod+d exec $menu

# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart
bindsym $mod+Shift+r exec swaynag -t warning -m 'You pressed the restart shortcut. Do you really want to restart? This will shut down your computer.' -B 'Yes, restart' 'reboot'

# Window Switcher
bindsym $mod+c exec ~/bin/fuzzel/window-switcher.sh

# Exit 
bindsym $mod+Shift+e exec ~/bin/fuzzel/power-menu.sh

# Bluetooth
bindsym $mod+b exec blueman-manager

# Screenshots
bindsym Print exec ~/bin/fuzzel/screenshot/screenshot.sh
#bindsym $mod+c exec pkill wf-recorder 

# Moving around:
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Move workspcaces around
bindsym $mod+Ctrl+$left move workspace to output left
bindsym $mod+Ctrl+$down move workspace to output down
bindsym $mod+Ctrl+$up move workspace to output up
bindsym $mod+Ctrl+$right move workspace to output right

bindsym $mod+Ctrl+Left move workspace to output left
bindsym $mod+Ctrl+Down move workspace to output down
bindsym $mod+Ctrl+Up move workspace to output up
bindsym $mod+Ctrl+Right move workspace to output right

# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Screen lock
# bindsym $mod+Shift+l exec $lock

# # Volume controls:
# bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
# bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
# bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%

set $volume_helper_cmd ~/.config/sway/volume-helper

# Allow volume controls even if the screen is locked
bindsym --locked {
    XF86AudioRaiseVolume exec \
        $volume_helper_cmd --limit "$volume_limit" --increase "$volume_step"
    XF86AudioLowerVolume exec \
        $volume_helper_cmd --limit "$volume_limit" --decrease "$volume_step"
    XF86AudioMute    exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $volume_helper_cmd
    XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
}

# Brightness controls
bindsym XF86MonBrightnessUp exec light -U 10
bindsym XF86MonBrightnessDown exec light -A 10
# Layout stuff:

# You can "split" the current object of your focus with
# $mod+v or $mod+w, for horizontal and vertical splits
# respectively.
bindsym $mod+v splith
bindsym $mod+w splitv

# Switch the current container between different layout styles
bindsym $mod+semicolon layout stacking
bindsym $mod+period layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

bindsym f12 exec ~/bin/fuzzel/keybindings.sh
bindsym $mod+Shift+w exec ~/bin/fuzzel/wifi-selector.sh
bindsym $mod+Space exec ~/bin/fuzzel/web-search.sh

set $screenrecord wf-recorder -g "$(slurp)" -f ~/Videos/screenshots/mov-$(date +"%Y-%m-%d--%H-%M-%s.mp4")
bindsym Ctrl+Shift+F6 exec $screenrecord
bindsym Ctrl+Shift+Backspace exec killall -s SIGINT wf-recorder


exec $term
# notifications
# exec mako
# empty trash ofter 30 days
# -f prevents an issue that arose due to verification being required
exec trash-empty 30 -f
include /etc/sway/config.d/*
# include ~/.config/sway/config.d/*

